variables:
    registryEndpoint: eshop-registry
trigger:
  branches:
    include:
    - master
    - dev
  paths:
    include:
    - src/ApiGateways/Web.Bff.Shopping/aggregator/*
    - k8s/helm/webshoppingagg/* 
jobs:
- job: BuildLinux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: DockerCompose@0
    displayName: Compose build webshoppingagg
    inputs:
      dockerComposeCommand: 'build webshoppingagg'
      containerregistrytype: Container Registry
      dockerRegistryEndpoint: $(registryEndpoint)
      dockerComposeFile: docker-compose.yml
      qualifyImageNames: true
      projectName: ""
      dockerComposeFileArgs: |
        TAG=$(Build.SourceBranchName)
  - task: DockerCompose@0
    displayName: Compose push webshoppingagg
    inputs:
      dockerComposeCommand: 'push webshoppingagg'
      containerregistrytype: Container Registry
      dockerRegistryEndpoint: $(registryEndpoint)
      dockerComposeFile: docker-compose.yml
      qualifyImageNames: true
      projectName: ""
      dockerComposeFileArgs: |
        TAG=$(Build.SourceBranchName)
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Build.SourcesDirectory)/k8s/helm    
      targetFolder: $(Build.ArtifactStagingDirectory)/k8s/helm
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/k8s/helm
      artifactName: helm
- job: BuildWindows
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: DockerCompose@0
    displayName: Compose build webshoppingagg
    inputs:
      dockerComposeCommand: 'build webshoppingagg'
      containerregistrytype: Container Registry
      dockerRegistryEndpoint: $(registryEndpoint)
      dockerComposeFile: docker-compose.yml
      qualifyImageNames: true
      projectName: ""
      dockerComposeFileArgs: |
        TAG=$(Build.SourceBranchName)
        PLATFORM=win
  - task: DockerCompose@0
    displayName: Compose push webshoppingagg
    inputs:
      dockerComposeCommand: 'push webshoppingagg'
      containerregistrytype: Container Registry
      dockerRegistryEndpoint: $(registryEndpoint)
      dockerComposeFile: docker-compose.yml
      qualifyImageNames: true
      projectName: ""
      dockerComposeFileArgs: |
        TAG=$(Build.SourceBranchName)
        PLATFORM=win
- template: ../multiarch.yaml
  parameters:
    image: webshoppingagg
    branch: $(Build.SourceBranchName)
    registryEndpoint: $(registryEndpoint)